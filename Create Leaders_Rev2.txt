'----------------SETUP-------------------
'[
Dim invApp As Inventor.Application
	invApp = ThisApplication
Dim oDrawDoc As DrawingDocument
	oDrawDoc  = ThisDoc.Document
Dim oActiveSheet As Sheet
	oActiveSheet = oDrawDoc.ActiveSheet
Dim oSheet As Sheet
	oSheet = oDrawDoc.ActiveSheet
'Dim Xcoord = 62.25
'Dim Ycoord = 19.8
'Dim width = oSheet.Width
'Dim height = oSheet.Height
'MessageBox.Show("width" & width & "height" & height)
'Dim LS = 0.4
Dim oTG As Inventor.TransientGeometry = invApp.TransientGeometry
Dim leaderPoints As ObjectCollection = invApp.TransientObjects.CreateObjectCollection()
Dim oNote As LeaderNote 
']
'__________________________________________________________________________________________________________________________________________________________
'--------------FRONT VIEW----------------
'[
	'E-Stop Start/Stop Switches
		'[

				If Parameter("Start_Stop_EStop_on_HMI") = "True" Then
					leaderPoints.Add(oTG.CreatePoint2d(46, 40))    'controls text location 
					leaderPoints.Add(oTG.CreatePoint2d(43.8, 38.5)) 'controls arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "START / STOP / " & vbCrLf & "E-STOP SWITCHES ")
					leaderPoints.Clear()
				Else 'If its a remote SSES
					If Parameter("Travel_Direction") = "Left to Right" Then
						leaderPoints.Add(oTG.CreatePoint2d(40, 32))    'controls text location 
						leaderPoints.Add(oTG.CreatePoint2d(43.5, 34.5)) 'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "START / STOP / " & vbCrLf & "E-STOP SWITCHES ")
						leaderPoints.Clear()
					Else 'If it is Right to Left
						leaderPoints.Add(oTG.CreatePoint2d(57, 32))    'controls text location 
						leaderPoints.Add(oTG.CreatePoint2d(53.5, 34.5)) 'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "START / STOP / " & vbCrLf & "E-STOP SWITCHES ")
						leaderPoints.Clear()
					End If
				End If

				If Parameter("Start_Stop_EStop_on_HMI") = "True" Then
					leaderPoints.Add(oTG.CreatePoint2d(46, 40))    'controls text location 
					leaderPoints.Add(oTG.CreatePoint2d(43.8, 38.5)) 'controls arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "START / STOP / " & vbCrLf & "E-STOP SWITCHES ")
					leaderPoints.Clear()
				Else 'If its a remote SSES
					If Parameter("Travel_Direction") = "Left to Right" Then
						leaderPoints.Add(oTG.CreatePoint2d(40, 32))    'controls text location 
						leaderPoints.Add(oTG.CreatePoint2d(43.5, 34.5)) 'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "START / STOP / " & vbCrLf & "E-STOP SWITCHES ")
						leaderPoints.Clear()
					Else 'If it is Right to Left
						leaderPoints.Add(oTG.CreatePoint2d(57, 32))    'controls text location 
						leaderPoints.Add(oTG.CreatePoint2d(53.5, 34.5)) 'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "START / STOP / " & vbCrLf & "E-STOP SWITCHES ")
						leaderPoints.Clear()
					End If
				End If

		']
		
	'HMI
		'[
			If Parameter("Controls_Distance_from_Machine")= "0ft" Then
				If Parameter("HMI_Size") = "7in" Then
					leaderPoints.Clear()
					leaderPoints.add(oTG.CreatePoint2d(38, 41))   'controls text locatipn
					leaderPoints.add(oTG.CreatePoint2d(40, 37.9))   'controls arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "7"" HMI")
				Else If Parameter("HMI_Size") = "12in" Then
					leaderPoints.Clear()
					leaderPoints.add(oTG.CreatePoint2d(38, 41))   'controls text locatipn
					leaderPoints.add(oTG.CreatePoint2d(40, 37.9))   'controls arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "12"" HMI")
				Else If Parameter("HMI_Size") = "15in" Then
					leaderPoints.Clear()
					leaderPoints.add(oTG.CreatePoint2d(38, 41))   'controls text locatipn
					leaderPoints.add(oTG.CreatePoint2d(39, 39))   'controls arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "15"" HMI")
				Else If Parameter("HMI_Size") = "N/A" Then 'Do nothing
				End If
			Else 'If its a free standing controls
'				If Parameter("HMI_Size") = "7in" Then
'					leaderPoints.Clear()
'					leaderPoints.add(oTG.CreatePoint2d(56,20))   'controls text locatipn
'					leaderPoints.add(oTG.CreatePoint2d(46, 37.9))   'controls arrow location
'					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "7"" HMI")
'				Else If Parameter("HMI_Size") = "12in" Then
'					leaderPoints.Clear()
'					leaderPoints.add(oTG.CreatePoint2d(43.2, 41))   'controls text locatipn
'					leaderPoints.add(oTG.CreatePoint2d(46, 37.9))   'controls arrow location
'					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "12"" HMI")
'				Else If Parameter("HMI_Size") = "15in" Then
'					leaderPoints.Clear()
'					leaderPoints.add(oTG.CreatePoint2d(43.2, 41))   'controls text locatipn
'					leaderPoints.add(oTG.CreatePoint2d(46.5, 39))   'controls arrow location
'					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "15"" HMI")
'				Else If Parameter("HMI_Size") = "N/A" Then 'Do nothing
'				End If
			End If
		']

	'Input Power
		'[
			If Parameter("Controls_Distance_from_Machine") = "0ft" Then
				If Parameter("HMI_Size") = "7in" Or Parameter("HMI_Size") = "12in" Then
					If Parameter("Input_Power") = "110 V / 1 PH" Then
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(37.5, 40))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(38.5, 38.2))   'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "INPUT POWER" & vbCrLf & "110 V / 1 PH")
					Else If Parameter("Input_Power") = "220 V / 1 PH" Then
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(37.5, 40))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(38.5, 38.2))   'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "INPUT POWER" & vbCrLf & "220 V / 1 PH")
					Else If Parameter("Input_Power") = "220 V / 3 PH" Then
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(37.5, 40))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(38.5, 38.2))   'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "INPUT POWER" & vbCrLf & "220 V / 3 PH")
					Else If Parameter("Input_Power") = "440 V / 3 PH" Then
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(37.5, 40))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(38.5, 38.2))   'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "INPUT POWER" & vbCrLf & "440 V / 3 PH")
					End If
					
				Else If Parameter("HMI_Size") = "15in" Then 'All 15in are Globals, and the Power In is on the Bottom View
					If Parameter("Input_Power") = "110 V / 1 PH" Then
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(46.5, 44.5))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(44.5,46.5))   'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "INPUT POWER" & vbCrLf & "110 V / 1 PH")
					Else If Parameter("Input_Power") = "220 V / 1 PH" Then
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(46.5, 44.5))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(44.5,46.5))   'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "INPUT POWER" & vbCrLf & "220 V / 1 PH")
					Else If Parameter("Input_Power") = "220 V / 3 PH" Then
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(46.5, 44.5))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(44.5,46.5))   'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "INPUT POWER" & vbCrLf & "220 V / 3 PH")
					Else If Parameter("Input_Power") = "440 V / 3 PH" Then
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(46.5, 44.5))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(44.5,46.5))   'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "INPUT POWER" & vbCrLf & "440 V / 3 PH")
					End If
				End If
			Else 'If it is a free-standing enclosure
			End If
		']
		
	'Pulley
		'[
			If Parameter("Controls_Distance_from_Machine") = "0ft" Then
				If Parameter("Pulley") = "10" Then			
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(52, 38))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(51, 36.5))   'controls  arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "Ø10 PULLEY"& vbCrLf & "TYP.") 'Left Side
				Else If Parameter("Pulley")="15" Then'If it is a 19 pulley
					leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(52, 38))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(51, 36.2))   'controls  arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "Ø15 PULLEY" & vbCrLf & "TYP.") 'Left Side
				Else If Parameter("Pulley")="29" Then			
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(51.5, 37))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(50.8, 35.2))   'controls  arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "Ø29 PULLEY"& vbCrLf & "TYP.") 'Left Side
				Else If Parameter("Pulley")="30" Then'If it is a 19 pulley
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(52, 38))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(51, 36.2))   'controls  arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "Ø30 PULLEY"& vbCrLf & "TYP.") 'Left Side
				End If
			Else 'If it is a free-standing enclosure
			End If
		']
		
	'Controls Serial, Main Power, UL508A, and Stack Light
		'[
			If Parameter("HMI_Size") = "7in" Or Parameter("HMI_Size") = "12in" Then
				If Parameter("Travel_Direction") = "Right to Left" Then
					If Parameter("Controls_Distance_from_Machine") = "0ft" Then
						If Parameter("Mounted_Controls_Enclosure") = "On the Front" Then
							'Main Power Disconnect	
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(49,30))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(40, 34.5))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"MAIN POWER" & vbCrLf & "DISCONNECT")
								
							'UL508A Cert.
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(49, 28.5))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(42,33))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"UL508A CERTIFIED" & vbCrLf & "ENCLOSURE"  & vbCrLf & "7MM TRIANGLE" & vbCrLf & "KEY LOCKED")
						Else If Parameter("Mounted_Controls_Enclosure") = "On the Back" Then
							'Main Power Disconnect	
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(24,28.2))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(23.3, 30))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"MAIN POWER" & vbCrLf & "DISCONNECT")
								
							'UL508A Cert.
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(24,26.2))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(22.75, 27.18))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"UL508A CERTIFIED" & vbCrLf & "ENCLOSURE"  & vbCrLf & "7MM TRIANGLE" & vbCrLf & "KEY LOCKED")
						Else 'If its not attached, do nothing
						End If
						'Stack Light
							If Parameter("Stack_Lights") = "3 Segments" Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(46.5, 42))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(45, 41))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "3 SEGMENT" & vbCrLf & "STACK LIGHTS")
							Else If Parameter("Stack_Lights") = "3 Segments" Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(46.5, 42))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(45, 41))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "3 SEGMENT" & vbCrLf & "STACK LIGHTS")
							Else 'If there's no stack light, do nothing
							End If
							
					Else If Parameter("Controls_Distance_from_Machine") > "0ft" Then
							'Main Power Disconnect	
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, Ycoord - 2))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9, Ycoord - 3))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "INTERLOCKED" & vbCrLf & "MAIN POWER" & vbCrLf & "DISCONNECT SWITCH")
								
							'UL508A Cert.
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, Ycoord - 4.5))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 8.3, Ycoord - 6.5))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"UL508A CERTIFIED" & vbCrLf & "ENCLOSURE"  & vbCrLf & "7MM TRIANGLE" & vbCrLf & "KEY LOCKED")
						
							'Stack Light
								If Parameter("Stack_Lights") = "3 Segments" Then
									leaderPoints.Clear()
									leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, 47.5))   'controls text locatipn
									leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 6.5, 41))   'controls arrow location
									oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "3 SEGMENT" & vbCrLf & "STACK LIGHTS")
								Else If Parameter("Stack_Lights") = "5 Segments" Then
									leaderPoints.Clear()
									leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, 47.5))   'controls text locatipn
									leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 6.5, 41))   'controls arrow location
									oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "5 SEGMENT" & vbCrLf & "STACK LIGHTS")
								Else 'If there's no stack lights, do nothing
								End If
					End If 'for attached enclosure
				Else 'If its left to right
					If Parameter("Controls_Distance_from_Machine") = "0ft" Then
						If Parameter("Mounted_Controls_Enclosure") = "On the Front" Then
							'Main Power Disconnect	
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(49,30))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(40, 34.5))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"MAIN POWER" & vbCrLf & "DISCONNECT")
								
							'UL508A Cert.
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(49, 28.5))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(42,33))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"UL508A CERTIFIED" & vbCrLf & "ENCLOSURE"  & vbCrLf & "7MM TRIANGLE" & vbCrLf & "KEY LOCKED")
						Else If Parameter("Mounted_Controls_Enclosure") = "On the Back" Then
							'Main Power Disconnect	
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(56.5,28.2))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(57.75, 30))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"MAIN POWER" & vbCrLf & "DISCONNECT")
								
							'UL508A Cert.
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(56.5,26.2))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(58.4, 27.18))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"UL508A CERTIFIED" & vbCrLf & "ENCLOSURE"  & vbCrLf & "7MM TRIANGLE" & vbCrLf & "KEY LOCKED")
						Else 'If its not attached, do nothing
						End If
						'Stack Light
							If Parameter("Stack_Lights") = "3 Segments" Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(46.5, 42))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(45, 41))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "3 SEGMENT" & vbCrLf & "STACK LIGHTS")
							Else If Parameter("Stack_Lights") = "5 Segments" Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(46.5, 42))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(45, 41))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "3 SEGMENT" & vbCrLf & "STACK LIGHTS")
							Else 'If there's no stack light, do nothing
							End If
							
					Else If Parameter("Controls_Distance_from_Machine") > "0ft" Then
						'Main Power Disconnect	
							leaderPoints.Clear()
							leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, Ycoord - 2))   'controls text locatipn
							leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9, Ycoord - 3))   'controls arrow location
							oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "INTERLOCKED" & vbCrLf & "MAIN POWER" & vbCrLf & "DISCONNECT SWITCH")
							
						'UL508A Cert.
							leaderPoints.Clear()
							leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, Ycoord - 4.5))   'controls text locatipn
							leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 8.3, Ycoord - 6.5))   'controls arrow location
							oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"UL508A CERTIFIED" & vbCrLf & "ENCLOSURE"  & vbCrLf & "7MM TRIANGLE" & vbCrLf & "KEY LOCKED")
					
						'Stack Light
							If Parameter("Stack_Lights") = "3 Segments" Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, 47.5))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 6.5, 41))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "3 SEGMENT" & vbCrLf & "STACK LIGHTS")
							Else If Parameter("Stack_Lights") = "5 Segments" Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, 47.5))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 6.5, 41))   'controls arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "5 SEGMENT" & vbCrLf & "STACK LIGHTS")
							Else 'If there's no stack lights, do nothing
							End If
					End If 'For Attached Enclosure
				End If 'For Left to Right
			Else If Parameter("HMI_Size") = "15in" Then 
				'Transport Direction doesn't matter for these Leaders
				If Parameter("Controls_Distance_from_Machine") = "0ft" Then 
					'Main Power Disconnect	
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(64,34))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(65.5, 36.7))   'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "INTERLOCKED" & vbCrLf & "MAIN POWER" & vbCrLf & "DISCONNECT SWITCH")
						
					'UL508A Cert.
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(64,32))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(66,35))   'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"UL508A CERTIFIED" & vbCrLf & "ENCLOSURE"  & vbCrLf & "7MM TRIANGLE" & vbCrLf & "KEY LOCKED")
				
					'Stack Light
						If Parameter("Stack_Lights") = True Then
							leaderPoints.Clear()
							leaderPoints.Add(oTG.CreatePoint2d(64, 40))   'controls text locatipn
							leaderPoints.Add(oTG.CreatePoint2d(67, 42))   'controls arrow location
							oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "3 SEGMENT" & vbCrLf & "STACK LIGHTS")
						Else 'If there's no stack light, do nothing
						End If
						
				Else If Parameter("Controls_Distance_from_Machine") > "0ft" Then
					'Main Power Disconnect	
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, Ycoord - 2))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9, Ycoord - 3))   'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "INTERLOCKED" & vbCrLf & "MAIN POWER" & vbCrLf & "DISCONNECT SWITCH")
						
					'UL508A Cert.
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, Ycoord - 4.5))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 8.3, Ycoord - 6.5))   'controls arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"UL508A CERTIFIED" & vbCrLf & "ENCLOSURE"  & vbCrLf & "7MM TRIANGLE" & vbCrLf & "KEY LOCKED")
				
					'Stack Light
						If Parameter("Stack_Lights") = True Then
							leaderPoints.Clear()
							leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, 47.5))   'controls text locatipn
							leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 6.5, 41))   'controls arrow location
							oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "3 SEGMENT" & vbCrLf & "STACK LIGHTS")
						Else 'If there's no stack light, do nothing
						End If
				End If 'For attached enclosure
			End If 'For HMI Size
	']
	
	'Controls Distance from Machine
		'[
		'	If Parameter("Controls_Distance_from_Machine") = "5ft" Then
		'		leaderPoints.Clear()
		'		leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, Ycoord - 8))   'controls text locatipn
		'		leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 8.3, Ycoord - 9))   'controls arrow location
		'		oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"FLOOR MOUNTED CONTROL" & vbCrLf & "FOR PLACEMENT WITHIN 5'")
		'		oDrawDoc.Update()
				
		'	Else If Parameter("Controls_Distance_from_Machine") = "10ft" Then
		'		leaderPoints.Clear()
		'		leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, Ycoord - 8))   'controls text locatipn
		'		leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 8.3, Ycoord - 9))   'controls arrow location
		'		oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "FLOOR MOUNTED CONTROL" & vbCrLf & "FOR PLACEMENT WITHIN 10'")
		'		oDrawDoc.Update()
				
		'	Else If Parameter("Controls_Distance_from_Machine") = "15ft" Then
		'		leaderPoints.Clear()
		'		leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, Ycoord - 8))   'controls text locatipn
		'		leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 8.3, Ycoord - 9))   'controls arrow location
		'		oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "FLOOR MOUNTED CONTROL" & vbCrLf & "FOR PLACEMENT WITHIN 15'")
		'		oDrawDoc.Update()
				
		'	Else If Parameter("Controls_Distance_from_Machine") = "20ft" Then
		'		leaderPoints.Clear()
		'		leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 9.9, Ycoord - 8))   'controls text locatipn
		'		leaderPoints.Add(oTG.CreatePoint2d(oSheet.Width - Xcoord + 8.3, Ycoord - 9))   'controls arrow location
		'		oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "FLOOR MOUNTED CONTROL" & vbCrLf & "FOR PLACEMENT WITHIN 20'")
		'		oDrawDoc.Update()
				
		'	Else If Parameter("Controls_Distance_from_Machine") = "0ft" Then
		'	End If
		']
']
'______________________________________________________________________________________________________________________________________________________	
'------------LEFT SIDE VIEW--------------
'[
	''Rejector Pump
		'[
			If Parameter("Mounted_Controls_Enclosure")="On the Front" Then
				If Parameter("HMI_Size") = "7in" Or Parameter("HMI_Size") ="12in" Then
					If  Parameter("Rejector")="Pusher" Or  Parameter("Rejector")="Air Blaster" Then
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(27.3, 29.1))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(26.2, 30.5))   'controls  arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "AIR INLET:" & vbCrLf & "60-80 PSI" & vbCrLf & "3-5 CFM" & vbCrLf & "1/4 NPT")
						leaderPoints.Clear()
					Else 'Do nothing
					End If
					
				Else If Parameter("HMI_Size") = "15in" Then 'The global enclosure will be in the way, so the leader needs to be longer
					If  Parameter("Rejector")="Pusher" Or  Parameter("Rejector")="Air Blaster" Then
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(33.3, 29.1))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(29, 30.5))   'controls  arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "AIR INLET:" & vbCrLf & "60-80 PSI" & vbCrLf & "3-5 CFM" & vbCrLf & "1/4 NPT")
						leaderPoints.Clear()
					Else 'Do nothing
					End If
				End If
			Else If Parameter("Mounted_Controls_Enclosure") = "On the Back" Then
				If Parameter("Travel_Direction") = "Right to Left"
					If Parameter("HMI_Size") = "7in" Or Parameter("HMI_Size") ="12in" Then
						If  Parameter("Rejector")="Pusher" Or  Parameter("Rejector")="Air Blaster" Then
							leaderPoints.Clear()
							leaderPoints.Add(oTG.CreatePoint2d(57.4, 29.1))   'controls text locatipn
							leaderPoints.Add(oTG.CreatePoint2d(59.9, 30.5))   'controls  arrow location
							oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "AIR INLET:" & vbCrLf & "60-80 PSI" & vbCrLf & "3-5 CFM" & vbCrLf & "1/4 NPT")
							leaderPoints.Clear()
						Else 'Do nothing
						End If
						
					Else If Parameter("HMI_Size") = "15in" Then 'The global enclosure will be in the way, so the leader needs to be longer
						If  Parameter("Rejector")="Pusher" Or  Parameter("Rejector")="Air Blaster" Then
							leaderPoints.Clear()
							leaderPoints.Add(oTG.CreatePoint2d(59, 29.1))   'controls text locatipn
							leaderPoints.Add(oTG.CreatePoint2d(63, 30.5))   'controls  arrow location
							oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "AIR INLET:" & vbCrLf & "60-80 PSI" & vbCrLf & "3-5 CFM" & vbCrLf & "1/4 NPT")
							leaderPoints.Clear()
						Else 'Do nothing
						End If
					End If
				Else 'if its left to right
					If Parameter("HMI_Size") = "7in" Or Parameter("HMI_Size") ="12in" Then
						If  Parameter("Rejector")="Pusher" Or  Parameter("Rejector")="Air Blaster" Then
							leaderPoints.Clear()
							leaderPoints.Add(oTG.CreatePoint2d(27.3, 29.1))   'controls text locatipn
							leaderPoints.Add(oTG.CreatePoint2d(26.2, 30.5))   'controls  arrow location
							oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "AIR INLET:" & vbCrLf & "60-80 PSI" & vbCrLf & "3-5 CFM" & vbCrLf & "1/4 NPT")
							leaderPoints.Clear()
						Else 'Do nothing
						End If
						
					Else If Parameter("HMI_Size") = "15in" Then 'The global enclosure will be in the way, so the leader needs to be longer
						If  Parameter("Rejector")="Pusher" Or  Parameter("Rejector")="Air Blaster" Then
							leaderPoints.Clear()
							leaderPoints.Add(oTG.CreatePoint2d(33.3, 29.1))   'controls text locatipn
							leaderPoints.Add(oTG.CreatePoint2d(29, 30.5))   'controls  arrow location
							oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "AIR INLET:" & vbCrLf & "60-80 PSI" & vbCrLf & "3-5 CFM" & vbCrLf & "1/4 NPT")
							leaderPoints.Clear()
						Else 'Do nothing
						End If
					End If
				End If
			Else 'Do nothing
			End If
		']
']
'_______________________________________________________________________________________________________________________________________________________
'------------RIGHT SIDE VIEW-------------
'[
	'Lift Points
		'[
			If (Parameter("Amount_of_Infeed_Conveyors")) >= 0 Then 'And Parameter("Amount_of_Outfeed_Conveyors")=0) And Parameter("Height") <= 40 in Then
				oDrawDoc.Update()
				leaderPoints.Clear()
				leaderPoints.Add(oTG.CreatePoint2d(61.5, 23))   'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(60.7, 27))   'controls LEFT arrowhead location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "LIFT POINT")
				leaderPoints.Clear()
				
				leaderPoints.Add(oTG.CreatePoint2d(65.5, 22))   'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(66.7, 27))   'controls LEFT arrowhead location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "LIFT POINT")
			Else 'Do nothing
			End If
 
		']
']
''______________________________________________________________________________________________________________________________________________________
'--------------BOTTOM VIEW---------------
'[
'	'Motor (include canBUS, Servo and qty)
		'[
			If Parameter("Travel_Direction") = "Left to Right"
				If Parameter("Controls_Distance_from_Machine") = "0ft" Then
					'[
					If Parameter("HMI_Size") = "7in" Or Parameter("HMI_Size") = "12in" Then
						'[
						If Parameter("Motor_Type") = "canBUS" Then
							'[
							If Parameter("Amount_of_Conveyors") = 1 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR")
							Else If Parameter("Amount_of_Conveyors") = 2 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (2x)")
							Else If Parameter("Amount_of_Conveyors") = 3 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (3x)")
							Else If Parameter("Amount_of_Conveyors") = 4 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (4x)")
							Else If Parameter("Amount_of_Conveyors") = 5 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (5x)")
							Else If Parameter("Amount_of_Conveyors") = 6 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (6x)")
							Else If Parameter("Amount_of_Conveyors") = 7 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (7x)")
							Else If Parameter("Amount_of_Conveyors") = 8 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (8x)")
							']
							End If 'canbus callout for 7" and 12"
							
						Else 'If its a servo for 7" and 12"
							'[
							If Parameter("Amount_of_Conveyors") = 1 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR")
							Else If Parameter("Amount_of_Conveyors") = 2 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (2x)")
							Else If Parameter("Amount_of_Conveyors") = 3 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (3x)")
							Else If Parameter("Amount_of_Conveyors") = 4 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (4x)")
							Else If Parameter("Amount_of_Conveyors") = 5 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (5x)")
							Else If Parameter("Amount_of_Conveyors") = 6 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (6x)")
							Else If Parameter("Amount_of_Conveyors") = 7 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (7x)")
							Else If Parameter("Amount_of_Conveyors") = 8 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(52, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(50, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (8x)")
							End If 'amount of conveyor ifs
							']
						End If 'if its a servo for 7" and 12"
					Else If Parameter("HMI_Size") = "15in" Then 'the location moves up b/c of the Global
						If Parameter("Motor_Type") = "canBUS" Then
							'[
							If Parameter("Amount_of_Conveyors") = 1 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR")
							Else If Parameter("Amount_of_Conveyors") = 2 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (2x)")
							Else If Parameter("Amount_of_Conveyors") = 3 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (3x)")
							Else If Parameter("Amount_of_Conveyors") = 4 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (4x)")
							Else If Parameter("Amount_of_Conveyors") = 5 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (5x)")
							Else If Parameter("Amount_of_Conveyors") = 6 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (6x)")
							Else If Parameter("Amount_of_Conveyors") = 7 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (7x)")
							Else If Parameter("Amount_of_Conveyors") = 8 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (8x)")
								']
							End If 'canbus callout for 15"
						Else 'If its a servo for 15"
							'[
							If Parameter("Amount_of_Conveyors") = 1 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR")
							Else If Parameter("Amount_of_Conveyors") = 2 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (2x)")
							Else If Parameter("Amount_of_Conveyors") = 3 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (3x)")
							Else If Parameter("Amount_of_Conveyors") = 4 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (4x)")
							Else If Parameter("Amount_of_Conveyors") = 5 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (5x)")
							Else If Parameter("Amount_of_Conveyors") = 6 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (6x)")
							Else If Parameter("Amount_of_Conveyors") = 7 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (7x)")
							Else If Parameter("Amount_of_Conveyors") = 8 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (8x)")
							End If'conveyor count if
							']
						End If'If its a servo for 15"
					']
					End If 'pulley callout for 15" HMI placement		
				Else 'If it is a free-standing enclosure
					'[
					'still figuring out the code for this
					']
					']
				End If 'for controls distance
				'_____________________________________________________________________________________
			Else 'If it is right to left
				'[
				If Parameter("Controls_Distance_from_Machine") = "0ft" Then
					'[
					If Parameter("HMI_Size") = "7in" Or Parameter("HMI_Size") = "12in" Then
						'[
						If Parameter("Motor_Type") = "canBUS" Then
							'[
							If Parameter("Amount_of_Conveyors") = 1 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR")
							Else If Parameter("Amount_of_Conveyors") = 2 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (2x)")
							Else If Parameter("Amount_of_Conveyors") = 3 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (3x)")
							Else If Parameter("Amount_of_Conveyors") = 4 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (4x)")
							Else If Parameter("Amount_of_Conveyors") = 5 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (5x)")
							Else If Parameter("Amount_of_Conveyors") = 6 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (6x)")
							Else If Parameter("Amount_of_Conveyors") = 7 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (7x)")
							Else If Parameter("Amount_of_Conveyors") = 8 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (8x)")
							']
							End If 'canbus callout for 7" and 12"
							
						Else 'If its a servo for 7" and 12"
							'[
							If Parameter("Amount_of_Conveyors") = 1 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR")
							Else If Parameter("Amount_of_Conveyors") = 2 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (2x)")
							Else If Parameter("Amount_of_Conveyors") = 3 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (3x)")
							Else If Parameter("Amount_of_Conveyors") = 4 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (4x)")
							Else If Parameter("Amount_of_Conveyors") = 5 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (5x)")
							Else If Parameter("Amount_of_Conveyors") = 6 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (6x)")
							Else If Parameter("Amount_of_Conveyors") = 7 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (7x)")
							Else If Parameter("Amount_of_Conveyors") = 8 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(31, 45))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(33, 48))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (8x)")
							End If 'amount of conveyor ifs
							']
						End If 'if its a servo for 7" and 12"
					Else If Parameter("HMI_Size") = "15in" Then 'the location moves up b/c of the Global
						If Parameter("Motor_Type") = "canBUS" Then
							'[
							If Parameter("Amount_of_Conveyors") = 1 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR")
							Else If Parameter("Amount_of_Conveyors") = 2 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (2x)")
							Else If Parameter("Amount_of_Conveyors") = 3 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (3x)")
							Else If Parameter("Amount_of_Conveyors") = 4 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (4x)")
							Else If Parameter("Amount_of_Conveyors") = 5 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (5x)")
							Else If Parameter("Amount_of_Conveyors") = 6 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (6x)")
							Else If Parameter("Amount_of_Conveyors") = 7 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (7x)")
							Else If Parameter("Amount_of_Conveyors") = 8 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "CANBUS MOTOR (8x)")
								']
							End If 'canbus callout for 15"
						Else 'If its a servo for 15"
							'[
							If Parameter("Amount_of_Conveyors") = 1 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR")
							Else If Parameter("Amount_of_Conveyors") = 2 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (2x)")
							Else If Parameter("Amount_of_Conveyors") = 3 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (3x)")
							Else If Parameter("Amount_of_Conveyors") = 4 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (4x)")
							Else If Parameter("Amount_of_Conveyors") = 5 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (5x)")
							Else If Parameter("Amount_of_Conveyors") = 6 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (6x)")
							Else If Parameter("Amount_of_Conveyors") = 7 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (7x)")
							Else If Parameter("Amount_of_Conveyors") = 8 Then
								leaderPoints.Clear()
								leaderPoints.Add(oTG.CreatePoint2d(57, 47))   'controls text locatipn
								leaderPoints.Add(oTG.CreatePoint2d(55, 51))   'controls  arrow location
								oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SERVO MOTOR (8x)")
							End If'conveyor count if
							']
						End If'If its a servo for 15"
					']
					End If 'pulley callout for different HMI placement		
				Else 'If it is a free-standing enclosure
						'[
							'still figuring out the code for this
						']
					']
				End If 'for controls distance
				']
			End If'for travel direction
		']
			
'	Load Cell 
	'[
		If Parameter("Travel_Direction") = "Left to Right"
			If Parameter("Type_of_Load_Cell") = "EMFR"
				leaderPoints.Clear()
				leaderPoints.Add(oTG.CreatePoint2d(38, 44.5))   'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(42, 48))   'controls  arrow location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "EMFR LOAD CELL")
			Else 'If its a SGLC
				leaderPoints.Clear()
				leaderPoints.Add(oTG.CreatePoint2d(38, 44.5))   'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(42, 48))   'controls  arrow location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "STRAIN GAUGE LOAD CELL")
			End If
		Else 'Right to Left
			If Parameter("Type_of_Load_Cell") = "EMFR"
				leaderPoints.Clear()
				leaderPoints.Add(oTG.CreatePoint2d(45, 44.5))   'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(42, 48))   'controls  arrow location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "EMFR LOAD CELL")
			Else 'If its a SGLC
				leaderPoints.Clear()
				leaderPoints.Add(oTG.CreatePoint2d(45, 44.5))   'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(42, 48))   'controls  arrow location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "STRAIN GAUGE LOAD CELL")
			End If
		End If
		
	']
'	Foot Detail
		'[
			If  Parameter("Amount_of_Conveyors") >= 0 Then
				leaderPoints.Clear()
				leaderPoints.Add(oTG.CreatePoint2d(28.5, 56.5))   'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(27.5, 55.2))   'controls  arrow location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "PATTERN" & vbCrLf & "ROTATIONAL")
				
			Else 	
			End If
			
		']
']
'_______________________________________________________________________________________________________________________________________________________
'----------------TOP VIEW----------------
'[
	'Reject Direction
		'[
			If Parameter("Reject_Direction") = "To the Front" Then
				If Parameter("Travel_Direction") = "Left to Right" Then
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(54, 11))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(54, 8))   'controls  arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "WEIGHT REJECTS" & vbCrLf & "TO THE FRONT")
					leaderPoints.Clear()
				Else 'if its right to left
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(29, 11))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(29, 8))   'controls  arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "WEIGHT REJECTS" & vbCrLf & "TO THE FRONT")
					leaderPoints.Clear()
				End If
			Else If Parameter("Reject_Direction") = "To the Rear"'If it rejects towards the back
				If Parameter("Travel_Direction") = "Left to Right" Then
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(54, 17))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(54, 21))   'controls  arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "WEIGHT REJECTS" & vbCrLf & "TO THE REAR")
					leaderPoints.Clear()
				Else 'if its right to left
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(29, 17))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(29, 21))   'controls  arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "WEIGHT REJECTS" & vbCrLf & "TO THE REAR")
					leaderPoints.Clear()
				End If
			Else 'no rejector
			End If
		']
'	Scale Photoeye
		'[
			If Parameter("Travel_Direction") = "Left to Right" Then
				'Scale Photoeye
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(36, 10))  'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(41.2, 13.5))   'controls  arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SCALE" & vbCrLf & "PHOTOEYE")
			Else 'Right to Left'	
				'Scale Photoeye
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(47, 12))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(43.5, 13.5))   'controls  arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "SCALE" & vbCrLf & "PHOTOEYE")
			End If
			']
'	Additional Photoeye
		'[
		If Parameter("Reject_Verify") = True Then
			If Parameter("Travel_Direction") = "Left to Right" Then
				leaderPoints.Clear()
				leaderPoints.Add(oTG.CreatePoint2d(51.2, 13.5))'Parameter("Height")/25.3))   'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(50.2, 12))'Parameter("Height")/25-4))   'controls  arrow location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "REJECT VERIFY" & vbCrLf & "LIGHTCURTAIN")
			Else 'Right to Left'	
				leaderPoints.Clear()
				leaderPoints.Add(oTG.CreatePoint2d(32, 16.5))   'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(33.5, 15))   'controls  arrow location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "REJECT VERIFY" & vbCrLf & "LIGHTCURTAIN")
			End If
		Else 'Do nothing
		End If
		
		If Parameter("Area_Full") = True Then
			If Parameter("Travel_Direction") = "Left to Right" Then
				leaderPoints.Clear()
				leaderPoints.Add(oTG.CreatePoint2d(51.2, 12)) 'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(50.2, 10.5))   'controls  arrow location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "AREA FULL" & vbCrLf & "PHOTOEYE")
			Else 'Right to Left'	
				leaderPoints.Clear()
				leaderPoints.Add(oTG.CreatePoint2d(32, 15))   'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(33.5, 14.5))   'controls  arrow location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "AREA FULL" & vbCrLf & "PHOTOEYE")
			End If
		Else 'Do Nothing
		End If
		
		If Parameter("Back_Up_Detection") = True Then
			If Parameter("Travel_Direction") = "Left to Right" Then
				leaderPoints.Clear()
				leaderPoints.Add(oTG.CreatePoint2d(53, 16.5)) 'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(52, 15.5)) 'controls  arrow location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "BACK-UP DETECTION" & vbCrLf & "PHOTOEYE" & vbCrLf & "(CUSTOMER MOUNTED)")
			Else 'Right to Left'	
				leaderPoints.Clear()
				leaderPoints.Add(oTG.CreatePoint2d(30, 19.5))   'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(31.5, 18.5))   'controls  arrow location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "BACK-UP DETECTION" & vbCrLf & "PHOTOEYE" & vbCrLf & "(CUSTOMER MOUNTED)")
			End If
		Else 'Do Nothing
		End If
		If Parameter("Countercheck") = True Then
			If Parameter("Travel_Direction") = "Left to Right" Then
				leaderPoints.Clear()
				leaderPoints.Add(oTG.CreatePoint2d(53, 18)) 'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(52, 15.5)) 'controls  arrow location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "COUNTERCHECK" & vbCrLf & "PHOTOEYE")
			Else 'Right to Left'	
				leaderPoints.Clear()
				leaderPoints.Add(oTG.CreatePoint2d(30, 21.5))   'controls text locatipn
				leaderPoints.Add(oTG.CreatePoint2d(31.5, 18.5))   'controls  arrow location
				oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "COUNTERCHECK" & vbCrLf & "PHOTOEYE")
			End If
		Else 'Do Nothing
		End If
		']
']
'______________________________________________________________________________________________________________________________________________________
'------------Metal Detector--------------
'[
	'MD Photoeye
		'[
			If Parameter("Metal_Detector") = True Then
				If Parameter("Travel_Direction") = "Left to Right" Then
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(29.5, 10))  'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(31.5, 13.5))   'controls  arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "METAL REJECT" & vbCrLf & "PHOTOEYE")
				Else' If its right to left
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(51, 11))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(49.5, 13))   'controls  arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "METAL REJECT" & vbCrLf & "PHOTOEYE")
				End If
			Else 'If there is no spacing wheel, do nothing
			End If
		']
		
	'MD Type callout
		'[
			If Parameter("Metal_Detector") = True Then
				If Parameter("Travel_Direction") = "Left to Right" Then
					'leaderPoints.Clear()
					'leaderPoints.Add(oTG.CreatePoint2d(31.5,40.8))   'controls text locatipn
					'leaderPoints.Add(oTG.CreatePoint2d(35.04,39))   'controls arrow location
					'oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"SPACING WHEEL")
				Else' If its right to left
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(49, 38.5))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(48, 37))   'controls  arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "METAL DETECTOR" & vbCrLf & "")
				End If
			Else 'If there is no spacing wheel, do nothing
			End If
		']
		
	'MD Reject
		'[
			If Parameter("Metal_Detector") = True Then
				If Parameter("MD_Reject_Direction") = "To the Front" Then
					If Parameter("Travel_Direction") = "Left to Right" Then
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(47, 11))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(47, 8))   'controls  arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "METAL REJECTS" & vbCrLf & "TO THE FRONT")
						leaderPoints.Clear()
					Else 'if its right to left
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(34, 11))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(34, 8))   'controls  arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "METAL REJECTS" & vbCrLf & "TO THE FRONT")
						leaderPoints.Clear()
					End If
				Else If Parameter("MD_Reject_Direction") = "To the Rear"'If it rejects towards the back
					If Parameter("Travel_Direction") = "Left to Right" Then
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(47, 17))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(47, 21))   'controls  arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "METAL REJECTS" & vbCrLf & "TO THE REAR")
						leaderPoints.Clear()
					Else 'if its right to left
						leaderPoints.Clear()
						leaderPoints.Add(oTG.CreatePoint2d(34, 17))   'controls text locatipn
						leaderPoints.Add(oTG.CreatePoint2d(34, 21))   'controls  arrow location
						oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints, "METAL REJECTS" & vbCrLf & "TO THE REAR")
						leaderPoints.Clear()
					End If
				Else 'no rejector
				End If
			Else'no MD
			End If
		']
']
'_______________________________________________________________________________________________________________________________________________________
'------------Customized Options----------
'[
	'Spacing Wheel
		'[
			If Parameter("Spacing_Wheel") = True Then
				If Parameter("Travel_Direction") = "Left to Right" Then
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(31.5,40.8))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(35.04,39))   'controls arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"SPACING WHEEL")
				Else' If its right to left
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(31.5,40.8))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(35.04,39))   'controls arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"SPACING WHEEL")
				End If
			Else 'If there is no spacing wheel, do nothing
			End If
		']
		
	'Vortec Cooler	
		'[
			If Parameter("Vortec_Cooler") = True Then
			'	If Parameter("Travel_Direction") = "Left to Right" Then
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(49,33))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(47,31.7))   'controls arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"VORTEC COOLER" & vbCrLf & "AIR INLET" & vbCrLf & "100 PSI" & vbCrLf & "1/4 NPT")
				'Else' If its right to left
				'	leaderPoints.Clear()
				'	leaderPoints.Add(oTG.CreatePoint2d(49,33))   'controls text locatipn
				'	leaderPoints.Add(oTG.CreatePoint2d(47,31.7))   'controls arrow location
				'	oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"VORTEC COOLER" & vbCrLf & "AIR INLET" & vbCrLf & "100 PSI" & vbCrLf & "1/4 NPT")
			'	End If
			Else 'If there is no vortec cooler, do nothing
			End If
		']
		
	'Side Grips
		'[
			If Parameter("Side_Grips") = True Then
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(60,11))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(58,14))   'controls arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"R48" & vbCrLf & "TYP.")
			Else 'If there is no sidegrips, do nothing
			End If
		']
		
	'Anti-Static Draft Shield
		'[
			If Parameter("AS_Draft_Cover") = True Then
				If Parameter("Travel_Direction") = "Left to Right" Then
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(58.5,40))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(60,39))   'controls arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"ANTI-STATIC" & vbCrLf & "DRAFT SHIELD")
				Else' If its right to left
					leaderPoints.Clear()
					leaderPoints.Add(oTG.CreatePoint2d(58.5,40))   'controls text locatipn
					leaderPoints.Add(oTG.CreatePoint2d(60,39))   'controls arrow location
					oNote = oSheet.DrawingNotes.LeaderNotes.Add(leaderPoints,"ANTI-STATIC" & vbCrLf & "DRAFT SHIELD")
				End If
			Else 'If there is no AS Draft Shield, do nothing
			End If
		']
		
	'Frame modifications
		'[
			'solid frame
		']
		
']
			
			
